#!/bin/bash

# Wraps jq to be able to process YAML

declare -r Y2J=$(dirname $0)/y2j
declare -r J2Y=$(dirname $0)/j2y

if [[ $# -eq 0 || $1 == '-h' ]]; then
    cat <<\EOF
yq - commandline YAML processor
Usage: yq [options] <jq filter>

    yq is a wrapper to jq for processing YAML input, applying the given
    filter to YAML text read from the standard input and producing the
    filter's results as YAML on standard output.  The simplest filter is
    ., which is the identity filter, copying yq's input to its output
    unmodified (except for formatting and keys order).
    
    Some of the options include:
     -e     set the exit status code based on the output
     -f     Read filter from the file f
     -s     read (slurp) all inputs into an array; apply filter to it
     -S     sort keys of objects on output
     --arg a v          set variable $a to value v
     --argjson a v      set variable $a to JSON value v
     --slurpfile a f    set variable $a to an array of values read from f
    Not all jq options have sense using yq.

    For more advanced filters see the jq(1) manpage and
    https://stedolan.github.io/jq
EOF
    exit 0
fi

${Y2J} | jq "$@" | ${J2Y}

exit $?

# vim:ai:sw=4:ts=4:et:syntax=sh
