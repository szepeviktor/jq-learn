# Tests are groups of three lines: program, input, expected output.
# Blank lines and lines starting with # are ignored.

#########################################################################
# String functions
#########################################################################

#
# chr, ord
#

def ord(s): s|explode[0]; ord("A")
null
65

def chr(n): [n]|implode; chr(65) == "A"
null
true

def ord(s): s|explode[0]; def chr(n): [n]|implode; ord(chr(65)) == 65 and chr(ord("A")) == "A"
null
true

#
# cset
#

include "lib/icon"; cset(.)
"uioaaeiouoaeiouae"
{"a":true,"e":true,"i":true,"o":true,"u":true}

#
# find
#

include "lib/icon"; find("on"; "one motion is optional")
null
0
8
18

include "lib/icon"; find("ma"; "mi mama me mima")
null
3
5
13

include "lib/icon"; find("ab"; .)
"abaabbaaabbbaaaabbbb" 
0
3
8
15

#
# upto
#

include "lib/icon"; upto("on"; .)
"one motion is optional"
0
1
5
8
9
14
18
19

include "lib/icon"; upto("aeiou"; .)
"kaleidoscope"
1
3
4
6
9
11

#
# repl
#
include "lib/icon"; repl("abc"; 2)
null
"abcabc"

#
# star
#

# not well ordered
include "lib/icon"; limit(8; star(.))
"01"
""
"0"
"1"
"00"
"10"
"01"
"11"
"000"

# ordered
include "lib/icon"; limit(8; star_wo(.))
"01"
""
"0"
"1"
"00"
"01"
"10"
"11"
"000"

# vim:ai:sw=2:ts=2:et:syntax=python
